import { AWSResource } from '../types';

export const sampleResources: AWSResource[] = [
  {
    id: 's3-bucket',
    name: 'S3 Bucket',
    service: 's3',
    description: 'Amazon Simple Storage Service bucket for object storage',
    icon: 'ü™£',
    arnPattern: 'arn:aws:s3:::*',
    actions: [
      {
        id: 's3:ListBucket',
        name: 'ListBucket',
        description: 'List objects in a bucket',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 's3:GetObject',
        name: 'GetObject',
        description: 'Retrieve objects from a bucket',
        category: 'read',
        requiresARN: true,
        dependencies: ['s3:ListBucket'],
      },
      {
        id: 's3:PutObject',
        name: 'PutObject',
        description: 'Upload objects to a bucket',
        category: 'write',
        requiresARN: true,
        dependencies: ['s3:ListBucket', 's3:GetBucketLocation'],
      },
      {
        id: 's3:DeleteObject',
        name: 'DeleteObject',
        description: 'Delete objects from a bucket',
        category: 'write',
        requiresARN: true,
        dependencies: ['s3:ListBucket'],
      },
      {
        id: 's3:GetBucketLocation',
        name: 'GetBucketLocation',
        description: 'Get the region of a bucket',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 's3:CreateBucket',
        name: 'CreateBucket',
        description: 'Create a new bucket',
        category: 'admin',
        requiresARN: true,
      },
      {
        id: 's3:DeleteBucket',
        name: 'DeleteBucket',
        description: 'Delete a bucket',
        category: 'admin',
        requiresARN: true,
        dependencies: ['s3:ListBucket', 's3:DeleteObject'],
      },
    ],
  },
  {
    id: 'ec2-instance',
    name: 'EC2 Instance',
    service: 'ec2',
    description: 'Amazon Elastic Compute Cloud virtual server',
    icon: 'üñ•Ô∏è',
    arnPattern: 'arn:aws:ec2:*:*:instance/*',
    actions: [
      {
        id: 'ec2:DescribeInstances',
        name: 'DescribeInstances',
        description: 'View instance details',
        category: 'read',
        requiresARN: false,
      },
      {
        id: 'ec2:StartInstances',
        name: 'StartInstances',
        description: 'Start stopped instances',
        category: 'write',
        requiresARN: true,
        dependencies: ['ec2:DescribeInstances'],
      },
      {
        id: 'ec2:StopInstances',
        name: 'StopInstances',
        description: 'Stop running instances',
        category: 'write',
        requiresARN: true,
        dependencies: ['ec2:DescribeInstances'],
      },
      {
        id: 'ec2:RebootInstances',
        name: 'RebootInstances',
        description: 'Reboot instances',
        category: 'write',
        requiresARN: true,
        dependencies: ['ec2:DescribeInstances'],
      },
      {
        id: 'ec2:TerminateInstances',
        name: 'TerminateInstances',
        description: 'Terminate instances permanently',
        category: 'admin',
        requiresARN: true,
        dependencies: ['ec2:DescribeInstances'],
      },
      {
        id: 'ec2:RunInstances',
        name: 'RunInstances',
        description: 'Launch new instances',
        category: 'admin',
        requiresARN: false,
      },
    ],
  },
  {
    id: 'lambda-function',
    name: 'Lambda Function',
    service: 'lambda',
    description: 'AWS Lambda serverless compute function',
    icon: 'Œª',
    arnPattern: 'arn:aws:lambda:*:*:function:*',
    actions: [
      {
        id: 'lambda:GetFunction',
        name: 'GetFunction',
        description: 'Get function configuration and metadata',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 'lambda:ListFunctions',
        name: 'ListFunctions',
        description: 'List Lambda functions',
        category: 'read',
        requiresARN: false,
      },
      {
        id: 'lambda:InvokeFunction',
        name: 'InvokeFunction',
        description: 'Invoke a Lambda function',
        category: 'write',
        requiresARN: true,
        dependencies: ['lambda:GetFunction'],
      },
      {
        id: 'lambda:UpdateFunctionCode',
        name: 'UpdateFunctionCode',
        description: 'Update function code',
        category: 'write',
        requiresARN: true,
        dependencies: ['lambda:GetFunction'],
      },
      {
        id: 'lambda:UpdateFunctionConfiguration',
        name: 'UpdateFunctionConfiguration',
        description: 'Update function configuration',
        category: 'write',
        requiresARN: true,
        dependencies: ['lambda:GetFunction'],
      },
      {
        id: 'lambda:DeleteFunction',
        name: 'DeleteFunction',
        description: 'Delete a Lambda function',
        category: 'admin',
        requiresARN: true,
        dependencies: ['lambda:GetFunction'],
      },
      {
        id: 'lambda:CreateFunction',
        name: 'CreateFunction',
        description: 'Create a new Lambda function',
        category: 'admin',
        requiresARN: false,
      },
    ],
  },
  {
    id: 'dynamodb-table',
    name: 'DynamoDB Table',
    service: 'dynamodb',
    description: 'Amazon DynamoDB NoSQL database table',
    icon: 'üóÑÔ∏è',
    arnPattern: 'arn:aws:dynamodb:*:*:table/*',
    actions: [
      {
        id: 'dynamodb:DescribeTable',
        name: 'DescribeTable',
        description: 'Get table information',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 'dynamodb:GetItem',
        name: 'GetItem',
        description: 'Retrieve a single item',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 'dynamodb:Query',
        name: 'Query',
        description: 'Query items using partition key',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 'dynamodb:Scan',
        name: 'Scan',
        description: 'Scan entire table',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 'dynamodb:PutItem',
        name: 'PutItem',
        description: 'Add or update an item',
        category: 'write',
        requiresARN: true,
      },
      {
        id: 'dynamodb:UpdateItem',
        name: 'UpdateItem',
        description: 'Update an existing item',
        category: 'write',
        requiresARN: true,
      },
      {
        id: 'dynamodb:DeleteItem',
        name: 'DeleteItem',
        description: 'Delete a single item',
        category: 'write',
        requiresARN: true,
      },
      {
        id: 'dynamodb:CreateTable',
        name: 'CreateTable',
        description: 'Create a new table',
        category: 'admin',
        requiresARN: false,
      },
      {
        id: 'dynamodb:DeleteTable',
        name: 'DeleteTable',
        description: 'Delete a table',
        category: 'admin',
        requiresARN: true,
      },
    ],
  },
  {
    id: 'iam-role',
    name: 'IAM Role',
    service: 'iam',
    description: 'AWS Identity and Access Management role',
    icon: 'üîê',
    arnPattern: 'arn:aws:iam::*:role/*',
    actions: [
      {
        id: 'iam:GetRole',
        name: 'GetRole',
        description: 'Get role information',
        category: 'read',
        requiresARN: true,
      },
      {
        id: 'iam:ListRoles',
        name: 'ListRoles',
        description: 'List IAM roles',
        category: 'read',
        requiresARN: false,
      },
      {
        id: 'iam:AssumeRole',
        name: 'AssumeRole',
        description: 'Assume a role',
        category: 'write',
        requiresARN: true,
        dependencies: ['iam:GetRole'],
      },
      {
        id: 'iam:AttachRolePolicy',
        name: 'AttachRolePolicy',
        description: 'Attach policy to role',
        category: 'write',
        requiresARN: true,
        dependencies: ['iam:GetRole'],
      },
      {
        id: 'iam:DetachRolePolicy',
        name: 'DetachRolePolicy',
        description: 'Detach policy from role',
        category: 'write',
        requiresARN: true,
        dependencies: ['iam:GetRole'],
      },
      {
        id: 'iam:CreateRole',
        name: 'CreateRole',
        description: 'Create a new role',
        category: 'admin',
        requiresARN: false,
      },
      {
        id: 'iam:DeleteRole',
        name: 'DeleteRole',
        description: 'Delete a role',
        category: 'admin',
        requiresARN: true,
        dependencies: ['iam:GetRole'],
      },
    ],
  },
];
